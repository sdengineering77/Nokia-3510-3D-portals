/* Generated by Together */

package portaleditor.gui.editpanel;
import ilog.views.chart.IlvChart;
import ilog.views.chart.IlvChartDataPicker;
import ilog.views.chart.IlvDisplayPoint;
import ilog.views.chart.IlvDoublePoints;
import ilog.views.chart.data.IlvDataSet;
import ilog.views.chart.data.IlvDefaultDataSet;
import ilog.views.chart.interactor.IlvChartEditPointInteractor;
import ilog.views.chart.renderer.IlvPolylineChartRenderer;
import java.awt.event.MouseEvent;
import java.util.Hashtable;

import portaleditor.data.DefaultPortalValues;
import portaleditor.data.PortalObject;

public class EditPortalInteractor extends IlvChartEditPointInteractor {

    public final static int SINGLE_CLICK				=   1;
    public final static int DOUBLE_CLICK				=   2;

    public final static int	MODE_MOVE_PORTAL		=	1;
    public final static int	MODE_SIZE_PORTAL		=	2;

	private IlvChart 		ilvChart 					= null;
	private Hashtable		xAxisToCheckpointMapping	= null;
	private int			mode						= MODE_MOVE_PORTAL;
	
	private int			move_offset_x				= 0;
	private int			move_offset_y				= 0;
	private IlvPolylineChartRenderer 	selectPortalPolylineChartRenderer	= null;
	private IlvPolylineChartRenderer 	allTrainsPolylineChartRenderer	= null;
	private IllegalJViewsPortalPanel 	panel;

	public EditPortalInteractor( IllegalJViewsPortalPanel panel, IlvPolylineChartRenderer selectPortalPolylineChartRenderer ) {
        super();
        
        this.setXEditAllowed( true );
        this.setYEditAllowed( true );
        this.ilvChart = panel.getIlvChart();
        this.selectPortalPolylineChartRenderer = selectPortalPolylineChartRenderer;
        this.panel = panel;
    }
    
    

	public void setXAxisToCheckpointMapping( Hashtable xAxisToCheckpointMapping ) {
        this.xAxisToCheckpointMapping = xAxisToCheckpointMapping;
    }

    public void processMouseEvent( MouseEvent me ) {
		if ( me.getID() == MouseEvent.MOUSE_RELEASED ) {
	        processMouseMotionEvent( me ); // read and set new values
			this.abort(); // abort the edit mode
        } 	else {
        	if( me.getID() == MouseEvent.MOUSE_PRESSED ) {
	            IlvDisplayPoint editTrainDisplayPoint = pickData(me);
				// Point selected?
	            if ( editTrainDisplayPoint != null ) {
	            	if( editTrainDisplayPoint != null && editTrainDisplayPoint.getIndex() == 0 ) {
						IlvDoublePoints mouseDoublePoint = new IlvDoublePoints(me.getX(), me.getY());
						IlvDataSet 		dataSet 		= editTrainDisplayPoint.getDataSet();

						// convert mouse x and y to dataspace
						ilvChart.toData( mouseDoublePoint );
						
						int 			x 				= ((((int) mouseDoublePoint.getX(0))>>5)<<5);
						int 			y 				= ((((int) mouseDoublePoint.getY(0))>>5)<<5);
						move_offset_x	= (int) (dataSet.getXData(0) - x);
						move_offset_y	= (int) (dataSet.getYData(0) - y);

						panel.setPortalObject((PortalObject)dataSet.getProperty("PortalObject"));
	            	}
	            }
        	}
        	
	        super.processMouseEvent( me );
        }
    }




    public void processMouseMotionEvent( MouseEvent me ) {
		if ( (me.getID() == MouseEvent.MOUSE_DRAGGED) || (me.getID() == MouseEvent.MOUSE_RELEASED) ) {
			// Get Point that is editted and index
            IlvDisplayPoint editTrainDisplayPoint = this.getEditPoint();
			// Point selected?
            if ( editTrainDisplayPoint != null ) {
            	if( editTrainDisplayPoint != null && editTrainDisplayPoint.getIndex() > 0 ) {
					// get unedited y value
					int 			currPointIndex 	= ((editTrainDisplayPoint.getIndex()-1)&3);
					IlvDataSet 		dataSet 		= editTrainDisplayPoint.getDataSet();
					IlvDoublePoints mouseDoublePoint = new IlvDoublePoints(me.getX(), me.getY());
	
					// convert mouse x and y to dataspace
					ilvChart.toData( mouseDoublePoint );
					
					int 			x 				= ((((int) mouseDoublePoint.getX(0))>>5)<<5);
					int 			y 				= ((((int) mouseDoublePoint.getY(0))>>5)<<5);
					PortalObject	portal			= (PortalObject) dataSet.getProperty("PortalObject");
					
					if( currPointIndex == 0 ) {
						portal.setLeft(x);
						portal.setTop(y);
					}	else 
					if( currPointIndex == 1 ) {
						portal.setRight(x);
						portal.setTop(y);
					}	else 
					if( currPointIndex == 2 ) {
						portal.setRight(x);
						portal.setBottom(y);
					}	else 
					if( currPointIndex == 3 ) {
						portal.setLeft(x);
						portal.setBottom(y);
					}
	
					dataSet.setData(0, portal.getRight(), portal.getBottom());
					dataSet.setData(1, portal.getLeft(), portal.getTop());
					dataSet.setData(2, portal.getRight(), portal.getTop());
					dataSet.setData(3, portal.getRight(), portal.getBottom());
					dataSet.setData(4, portal.getLeft(), portal.getBottom());
					dataSet.setData(5, portal.getLeft(), portal.getTop());
		
					drawGhost();
					panel.setPortalObject((PortalObject)dataSet.getProperty("PortalObject"));
					
            	}	else {
						IlvDataSet 		dataSet 		= editTrainDisplayPoint.getDataSet();
						IlvDoublePoints mouseDoublePoint = new IlvDoublePoints(me.getX(), me.getY());
		
						// convert mouse x and y to dataspace
						ilvChart.toData( mouseDoublePoint );
						
						int 			x 				= ((((int) mouseDoublePoint.getX(0))>>5)<<5);
						int 			y 				= ((((int) mouseDoublePoint.getY(0))>>5)<<5);
						PortalObject	portal			= (PortalObject) dataSet.getProperty("PortalObject");
						
						int 			diff_x			= (int) (move_offset_x + x - dataSet.getXData(0));
						int 			diff_y			= (int) (move_offset_y + y - dataSet.getYData(0));
						
						portal.setLeft(portal.getLeft()+diff_x);
						portal.setRight(portal.getRight()+diff_x);
						portal.setTop(portal.getTop()+diff_y);
						portal.setBottom(portal.getBottom()+diff_y);
	
						dataSet.setData(0, portal.getRight(), portal.getBottom());
						dataSet.setData(1, portal.getLeft(), portal.getTop());
						dataSet.setData(2, portal.getRight(), portal.getTop());
						dataSet.setData(3, portal.getRight(), portal.getBottom());
						dataSet.setData(4, portal.getLeft(), portal.getBottom());
						dataSet.setData(5, portal.getLeft(), portal.getTop());
	
						drawGhost();
						panel.setPortalObject((PortalObject)dataSet.getProperty("PortalObject"));

            	}
            }   else {
			
				if( me.getID() == MouseEvent.MOUSE_RELEASED ) {
			        IlvDoublePoints dataCoordinates = new IlvDoublePoints( me.getX(), me.getY() );
			        selectPortalPolylineChartRenderer.toData( dataCoordinates );
					int x = ((((int) dataCoordinates.getX(0))>>5)<<5);
					int y = ((((int) dataCoordinates.getY(0))>>5)<<5);
	
					IlvDataSet dataSet = AddPortalInteractor.createDataSet(x, y, DefaultPortalValues.width, DefaultPortalValues.height, DefaultPortalValues.floor, DefaultPortalValues.ceil);
			        // add this to datasource
			        selectPortalPolylineChartRenderer.getDataSource().addDataSet(dataSet);

					panel.setPortalObject((PortalObject)dataSet.getProperty("PortalObject"));
					
				}			
	
            }
        }	else {
            super.processMouseMotionEvent( me );
		}

        me.consume();

    }

	/**
	 * @see ilog.views.chart.interactor.IlvChartDataInteractor#pickData(IlvChartDataPicker)
	 */
	protected IlvDisplayPoint pickData(IlvChartDataPicker arg0) {
		IlvDisplayPoint pickedPoint = null;
		
		setPickingMode(NEARESTPOINT_PICKING);
		IlvDisplayPoint point = super.pickData(arg0);
		
		if( point != null ) {
			pickedPoint = 	point;
		}	else {
			setPickingMode(ITEM_PICKING);
			IlvDisplayPoint item  = super.pickData(arg0);
			
			if( item != null && item.getIndex() == 0 ) {
				pickedPoint = item;
			} 
		}
			
		return pickedPoint;
	}

}
