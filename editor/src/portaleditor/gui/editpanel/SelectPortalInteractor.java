/* Generated by Together */

package portaleditor.gui.editpanel;

import ilog.views.chart.data.IlvDataSet;
import ilog.views.chart.data.IlvDefaultDataSource;
import ilog.views.chart.interactor.IlvChartHighlightInteractor;
import ilog.views.chart.IlvDisplayPoint;
import java.awt.event.MouseEvent;

public class SelectPortalInteractor extends IlvChartHighlightInteractor {
	private IlvDefaultDataSource 	selectedTrainDataSource = null;
	private IlvDefaultDataSource 	allTrainsDataSource = null;
	
    public SelectPortalInteractor(IlvDefaultDataSource allTrainsDataSource, IlvDefaultDataSource selectedTrainDataSource  ) {
        this.setPickingMode( this.ITEM_PICKING );
        this.selectedTrainDataSource = selectedTrainDataSource;
        this.allTrainsDataSource = allTrainsDataSource;
//        this.setPickingMode( this.NEARESTPOINT_PICKING );
    }

	public void doIt(IlvDisplayPoint highlightedPoint, boolean isHighlighted, java.awt.event.MouseEvent me) {
        if ( me.getID() == MouseEvent.MOUSE_CLICKED ) {
	        this.selectTraject(highlightedPoint);
        }
    }

 	public void processMouseEvent(java.awt.event.MouseEvent me) {
		super.processMouseEvent(me);
        if ( me.getID() == MouseEvent.MOUSE_CLICKED ) {
			IlvDisplayPoint	displayPoint = this.getHighlightedPoint();

    	    this.selectTraject(displayPoint);
        }
 	}

 	public void processMouseMotionEvent(java.awt.event.MouseEvent me) {
		super.processMouseMotionEvent(me);
        if ( me.getID() == MouseEvent.MOUSE_CLICKED ) {
			IlvDisplayPoint	displayPoint = this.getHighlightedPoint();

    	    this.selectTraject(displayPoint);
        }
 	}

	public void selectTraject( IlvDisplayPoint	displayPoint ) {
		// check if point selected and a TBT available
    	if ( (displayPoint != null) ) {
    		// move dataset to selectedTrains datasource
    		IlvDataSet dataset = displayPoint.getDataSet();

    		// Constraint only one train can be selected for the time 
    		int numSelectedTrains = selectedTrainDataSource.getDataSetCount();
    		for( int selectedTrainsCnt=0; selectedTrainsCnt<numSelectedTrains; selectedTrainsCnt++ ) {
    			IlvDataSet removedDataset = selectedTrainDataSource.getDataSet(0);

				// if this dataset already was selected, keep it... 
				// will be removed in next iteration
				if( removedDataset != dataset ) { 
					selectedTrainDataSource.setDataSet( 0, null);    			
	    			allTrainsDataSource.addDataSet(removedDataset);
				}
    		}

    		
    		// already selected? deselect and move to allTrains dataset
    		if( selectedTrainDataSource.containsDataSet(dataset) ) {
				allTrainsDataSource.addDataSet(dataset);
				selectedTrainDataSource.setDataSet( selectedTrainDataSource.getDataSetIndex(dataset), null);    			
    		} else {
    			// asume not selected yet, move to selectedTrains dataset
				selectedTrainDataSource.addDataSet(dataset);
				allTrainsDataSource.setDataSet( allTrainsDataSource.getDataSetIndex(dataset), null);    			
    		}
    		
			// retrieve traject from dataset
//			Traject traject = (Traject) displayPoint.getDataSet().getProperty( "traject" );
			// set this traject on tbt
//			if ( traject != null ) {
//				tbtPanel.setTraject( traject );
//            }
    	}	else {
//	        tbtPanel.setTraject( null );
	        
	        // move selected trains to all trains dataset
/*	        while( selectedTrainDataSource.getDataSetCount() > 0 ) {
    			IlvDataSet dataset = selectedTrainDataSource.getDataSet(0);
				selectedTrainDataSource.setDataSet( 0, null);    			
    			allTrainsDataSource.addDataSet(dataset);
    		}
*/    		
    	}

    }
}
